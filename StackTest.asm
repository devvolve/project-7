// c_push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_0
D;JEQ
@SP
A=M
M=0
@LABEL_END_0
0;JMP
(LABEL_TRUE_0)
@SP
A=M
M=-1
(LABEL_END_0)
@SP
M=M+1
// c_push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_1
D;JEQ
@SP
A=M
M=0
@LABEL_END_1
0;JMP
(LABEL_TRUE_1)
@SP
A=M
M=-1
(LABEL_END_1)
@SP
M=M+1
// c_push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_2
D;JEQ
@SP
A=M
M=0
@LABEL_END_2
0;JMP
(LABEL_TRUE_2)
@SP
A=M
M=-1
(LABEL_END_2)
@SP
M=M+1
// c_push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_3
D;JLT
@SP
A=M
M=0
@LABEL_END_3
0;JMP
(LABEL_TRUE_3)
@SP
A=M
M=-1
(LABEL_END_3)
@SP
M=M+1
// c_push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_4
D;JLT
@SP
A=M
M=0
@LABEL_END_4
0;JMP
(LABEL_TRUE_4)
@SP
A=M
M=-1
(LABEL_END_4)
@SP
M=M+1
// c_push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_5
D;JLT
@SP
A=M
M=0
@LABEL_END_5
0;JMP
(LABEL_TRUE_5)
@SP
A=M
M=-1
(LABEL_END_5)
@SP
M=M+1
// c_push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_6
D;JGT
@SP
A=M
M=0
@LABEL_END_6
0;JMP
(LABEL_TRUE_6)
@SP
A=M
M=-1
(LABEL_END_6)
@SP
M=M+1
// c_push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_7
D;JGT
@SP
A=M
M=0
@LABEL_END_7
0;JMP
(LABEL_TRUE_7)
@SP
A=M
M=-1
(LABEL_END_7)
@SP
M=M+1
// c_push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@LABEL_TRUE_8
D;JGT
@SP
A=M
M=0
@LABEL_END_8
0;JMP
(LABEL_TRUE_8)
@SP
A=M
M=-1
(LABEL_END_8)
@SP
M=M+1
// c_push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// c_push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// c_push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
M=M-D
@SP
M=M+1
// Performing arithmetic: neg
@SP
M=M-1
@SP
A=M
M=-M
@SP
M=M+1
// Performing arithmetic: and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D&M
@SP
M=M+1
// c_push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// Performing arithmetic: or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D|M
@SP
M=M+1
// Performing arithmetic: not
@SP
M=M-1
@SP
A=M
M=!M
@SP
M=M+1
